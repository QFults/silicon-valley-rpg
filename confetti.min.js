var confetti = { maxCount: 150, speed: 2, frameInterval: 15, alpha: 1, gradient: !1, start: null, stop: null, toggle: null, pause: null, resume: null, togglePause: null, remove: null, isPaused: null, isRunning: null }; confetti.start = startConfetti, confetti.stop = stopConfetti, confetti.toggle = toggleConfetti, confetti.pause = pauseConfetti, confetti.resume = resumeConfetti, confetti.togglePause = toggleConfettiPause, confetti.isPaused = isConfettiPaused, confetti.remove = removeConfetti, confetti.isRunning = isConfettiRunning; var supportsAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame, colors = ["rgba(30,144,255,", "rgba(107,142,35,", "rgba(255,215,0,", "rgba(255,192,203,", "rgba(106,90,205,", "rgba(173,216,230,", "rgba(238,130,238,", "rgba(152,251,152,", "rgba(70,130,180,", "rgba(244,164,96,", "rgba(210,105,30,", "rgba(220,20,60,"], streamingConfetti = !1, animationTimer = null, pause = !1, lastFrameTime = Date.now(), particles = [], waveAngle = 0, context = null; function resetParticle(t, e, n) { return t.color = colors[Math.random() * colors.length | 0] + (confetti.alpha + ")"), t.color2 = colors[Math.random() * colors.length | 0] + (confetti.alpha + ")"), t.x = Math.random() * e, t.y = Math.random() * n - n, t.diameter = 10 * Math.random() + 5, t.tilt = 10 * Math.random() - 10, t.tiltAngleIncrement = .07 * Math.random() + .05, t.tiltAngle = Math.random() * Math.PI, t } function toggleConfettiPause() { pause ? resumeConfetti() : pauseConfetti() } function isConfettiPaused() { return pause } function pauseConfetti() { pause = !0 } function resumeConfetti() { pause = !1, runAnimation() } function runAnimation() { if (!pause) if (0 === particles.length) context.clearRect(0, 0, window.innerWidth, window.innerHeight), animationTimer = null; else { var t = Date.now(), e = t - lastFrameTime; (!supportsAnimationFrame || e > confetti.frameInterval) && (context.clearRect(0, 0, window.innerWidth, window.innerHeight), updateParticles(), drawParticles(context), lastFrameTime = t - e % confetti.frameInterval), animationTimer = requestAnimationFrame(runAnimation) } } function startConfetti(t, e, n) { var i = window.innerWidth, o = window.innerHeight; window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) { return window.setTimeout(t, confetti.frameInterval) }; var a = document.getElementById("confetti-canvas"); null === a ? ((a = document.createElement("canvas")).setAttribute("id", "confetti-canvas"), a.setAttribute("style", "display:block;z-index:999999;pointer-events:none;position:fixed;top:0"), document.body.prepend(a), a.width = i, a.height = o, window.addEventListener("resize", function () { a.width = window.innerWidth, a.height = window.innerHeight }, !0), context = a.getContext("2d")) : null === context && (context = a.getContext("2d")); var r = confetti.maxCount; if (e) if (n) if (e == n) r = particles.length + n; else { if (e > n) { var s = e; e = n, n = s } r = particles.length + (Math.random() * (n - e) + e | 0) } else r = particles.length + e; else n && (r = particles.length + n); for (; particles.length < r;)particles.push(resetParticle({}, i, o)); streamingConfetti = !0, pause = !1, runAnimation(), t && window.setTimeout(stopConfetti, t) } function stopConfetti() { streamingConfetti = !1 } function removeConfetti() { stop(), pause = !1, particles = [] } function toggleConfetti() { streamingConfetti ? stopConfetti() : startConfetti() } function isConfettiRunning() { return streamingConfetti } function drawParticles(t) { for (var e, n, i, o, a = 0; a < particles.length; a++) { if (e = particles[a], t.beginPath(), t.lineWidth = e.diameter, n = (i = e.x + e.tilt) + e.diameter / 2, o = e.y + e.tilt + e.diameter / 2, confetti.gradient) { var r = t.createLinearGradient(n, e.y, i, o); r.addColorStop("0", e.color), r.addColorStop("1.0", e.color2), t.strokeStyle = r } else t.strokeStyle = e.color; t.moveTo(n, e.y), t.lineTo(i, o), t.stroke() } } function updateParticles() { var t, e = window.innerWidth, n = window.innerHeight; waveAngle += .01; for (var i = 0; i < particles.length; i++)t = particles[i], !streamingConfetti && t.y < -15 ? t.y = n + 100 : (t.tiltAngle += t.tiltAngleIncrement, t.x += Math.sin(waveAngle) - .5, t.y += .5 * (Math.cos(waveAngle) + t.diameter + confetti.speed), t.tilt = 15 * Math.sin(t.tiltAngle)), (t.x > e + 20 || t.x < -20 || t.y > n) && (streamingConfetti && particles.length <= confetti.maxCount ? resetParticle(t, e, n) : (particles.splice(i, 1), i--)) }